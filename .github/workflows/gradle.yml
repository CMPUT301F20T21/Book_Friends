# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  pull_request:
    branches: [ master ]
  push:
    branches: [ master ]
  

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

      # enable caching
    - uses: actions/cache@v2
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

      # generate gradle wrapper tool executable
    - name: Generate gradlew (gradle wrapper executable)
      run: gradle wrapper
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    
    - name: Grab test google-service.json key
      env:
        FIREBASE_TEST_SERVICE_KEY: ${{ secrets.FIREBASE_TEST_SERVICE_KEY }}
      run: echo $FIREBASE_TEST_SERVICE_KEY > app/google-services.json

      # generate debug apk
    - name: Assemble Debug APK
      run: ./gradlew assembleDebug --stacktrace

      # generate intent test apk that will be used in firebase test lab
    - name: Assemble Test Debug APK
      run: ./gradlew assembleAndroidTest --stacktrace

      # export app artifact so we can download if needed
    - uses: actions/upload-artifact@v2
      with:
        name: app-debug
        path: app/build/outputs/apk/debug/app-debug.apk

      # upload test apks to test lab and start testing
    - name: Run tests on Firebase Test Lab
      uses: asadmansr/Firebase-Test-Lab-Action@v1.0
      with:
        arg-spec: '.github/tests.yml:android-pixel-4'
      env:
        SERVICE_ACCOUNT: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
      continue-on-error: true

  unitTest:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8 
      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Generate gradlew (gradle wrapper executable)
        run: gradle wrapper
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Run Unit Tests
        run: ./gradlew test --stacktrace
